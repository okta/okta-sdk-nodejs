/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


'use strict';
/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, '__esModule', { value: true });
exports.Org2OrgApplication = void 0;
/**
* Schema for the Okta Org2Org app (key name: `okta_org2org`)  To create an Org2Org app, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) request with the following parameters in the request body. > **Notes:** > * The Okta Org2Org (`okta_org2org`) app isn\'t available in Okta Integrator Free Plan orgs. If you need to test this feature in your Integrator Free Plan org, contact your Okta account team. > * The Okta Org2Org app supports `SAML_2_0` and `AUTO_LOGIN` sign-on modes.
*/
class Org2OrgApplication {
  constructor() {
  }
  static getAttributeTypeMap() {
    return Org2OrgApplication.attributeTypeMap;
  }
}
exports.Org2OrgApplication = Org2OrgApplication;
Org2OrgApplication.discriminator = undefined;
Org2OrgApplication.attributeTypeMap = [
  {
    'name': 'accessibility',
    'baseName': 'accessibility',
    'type': 'ApplicationAccessibility',
    'format': ''
  },
  {
    'name': 'credentials',
    'baseName': 'credentials',
    'type': 'SchemeApplicationCredentials',
    'format': ''
  },
  {
    'name': 'label',
    'baseName': 'label',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'licensing',
    'baseName': 'licensing',
    'type': 'ApplicationLicensing',
    'format': ''
  },
  {
    'name': 'name',
    'baseName': 'name',
    'type': 'Org2OrgApplicationNameEnum',
    'format': ''
  },
  {
    'name': 'profile',
    'baseName': 'profile',
    'type': '{ [key: string]: any; }',
    'format': ''
  },
  {
    'name': 'signOnMode',
    'baseName': 'signOnMode',
    'type': 'Org2OrgApplicationSignOnModeEnum',
    'format': ''
  },
  {
    'name': 'status',
    'baseName': 'status',
    'type': 'ApplicationLifecycleStatus',
    'format': ''
  },
  {
    'name': 'visibility',
    'baseName': 'visibility',
    'type': 'ApplicationVisibility',
    'format': ''
  },
  {
    'name': 'settings',
    'baseName': 'settings',
    'type': 'Org2OrgApplicationSettings',
    'format': ''
  }
];
