/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


'use strict';
/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, '__esModule', { value: true });
exports.UserLinks = void 0;
/**
* Specifies link relations (see [Web Linking](https://datatracker.ietf.org/doc/html/rfc8288) available for the current status of a user. The links object is used for dynamic discovery of related resources, lifecycle operations, and credential operations. The links object is read-only.  For an individual user result, the links object contains a full set of link relations available for that user as determined by your policies. For a collection of users, the links object contains only the `self` link. Operations that return a collection of users include [List all users](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/listUsers) and [List all group member users](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroupUsers).
*/
class UserLinks {
  constructor() {
  }
  static getAttributeTypeMap() {
    return UserLinks.attributeTypeMap;
  }
}
exports.UserLinks = UserLinks;
UserLinks.discriminator = undefined;
UserLinks.attributeTypeMap = [
  {
    'name': 'self',
    'baseName': 'self',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'activate',
    'baseName': 'activate',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'resetPassword',
    'baseName': 'resetPassword',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'resetFactors',
    'baseName': 'resetFactors',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'expirePassword',
    'baseName': 'expirePassword',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'forgotPassword',
    'baseName': 'forgotPassword',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'changeRecoveryQuestion',
    'baseName': 'changeRecoveryQuestion',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'deactivate',
    'baseName': 'deactivate',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'reactivate',
    'baseName': 'reactivate',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'changePassword',
    'baseName': 'changePassword',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'schema',
    'baseName': 'schema',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'suspend',
    'baseName': 'suspend',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'unsuspend',
    'baseName': 'unsuspend',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'unlock',
    'baseName': 'unlock',
    'type': 'HrefObject',
    'format': ''
  },
  {
    'name': 'type',
    'baseName': 'type',
    'type': 'HrefObject',
    'format': ''
  }
];
