/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


'use strict';
/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, '__esModule', { value: true });
exports.JsonWebKey1 = void 0;
/**
* A [JSON Web Key (JWK)](https://tools.ietf.org/html/rfc7517) is a JSON representation of a cryptographic key. Okta can use these keys to verify the signature of a JWT when provided for the `private_key_jwt` client authentication method or for a signed authorize request object. Okta supports both RSA and Elliptic Curve (EC) keys.
*/
class JsonWebKey1 {
  constructor() {
    // this.kty = 'JsonWebKey1';
  }
  static getAttributeTypeMap() {
    return JsonWebKey1.attributeTypeMap;
  }
}
exports.JsonWebKey1 = JsonWebKey1;
JsonWebKey1.discriminator = 'kty';
JsonWebKey1.mapping = {
  'EC': 'JsonWebKeyEC',
  'RSA': 'JsonWebKeyRsa',
};
JsonWebKey1.attributeTypeMap = [
  {
    'name': 'alg',
    'baseName': 'alg',
    'type': 'SigningAlgorithm',
    'format': ''
  },
  {
    'name': 'kid',
    'baseName': 'kid',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'kty',
    'baseName': 'kty',
    'type': 'JsonWebKeyType',
    'format': ''
  },
  {
    'name': 'status',
    'baseName': 'status',
    'type': 'JsonWebKeyStatus',
    'format': ''
  },
  {
    'name': 'use',
    'baseName': 'use',
    'type': 'JsonWebKeyUse',
    'format': ''
  }
];
