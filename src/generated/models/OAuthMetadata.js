/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


'use strict';
/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, '__esModule', { value: true });
exports.OAuthMetadata = void 0;
class OAuthMetadata {
  constructor() {
  }
  static getAttributeTypeMap() {
    return OAuthMetadata.attributeTypeMap;
  }
}
exports.OAuthMetadata = OAuthMetadata;
OAuthMetadata.discriminator = undefined;
OAuthMetadata.attributeTypeMap = [
  {
    'name': 'authorization_endpoint',
    'baseName': 'authorization_endpoint',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'backchannel_authentication_request_signing_alg_values_supported',
    'baseName': 'backchannel_authentication_request_signing_alg_values_supported',
    'type': 'Array<SigningAlgorithm>',
    'format': ''
  },
  {
    'name': 'backchannel_token_delivery_modes_supported',
    'baseName': 'backchannel_token_delivery_modes_supported',
    'type': 'Array<TokenDeliveryMode>',
    'format': ''
  },
  {
    'name': 'claims_supported',
    'baseName': 'claims_supported',
    'type': 'Array<string>',
    'format': ''
  },
  {
    'name': 'code_challenge_methods_supported',
    'baseName': 'code_challenge_methods_supported',
    'type': 'Array<CodeChallengeMethod>',
    'format': ''
  },
  {
    'name': 'device_authorization_endpoint',
    'baseName': 'device_authorization_endpoint',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'dpop_signing_alg_values_supported',
    'baseName': 'dpop_signing_alg_values_supported',
    'type': 'Array<OAuthMetadataDpopSigningAlgValuesSupportedEnum>',
    'format': ''
  },
  {
    'name': 'end_session_endpoint',
    'baseName': 'end_session_endpoint',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'grant_types_supported',
    'baseName': 'grant_types_supported',
    'type': 'Array<GrantType>',
    'format': ''
  },
  {
    'name': 'introspection_endpoint',
    'baseName': 'introspection_endpoint',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'introspection_endpoint_auth_methods_supported',
    'baseName': 'introspection_endpoint_auth_methods_supported',
    'type': 'Array<EndpointAuthMethod>',
    'format': ''
  },
  {
    'name': 'issuer',
    'baseName': 'issuer',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'jwks_uri',
    'baseName': 'jwks_uri',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'pushed_authorization_request_endpoint',
    'baseName': 'pushed_authorization_request_endpoint',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'registration_endpoint',
    'baseName': 'registration_endpoint',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'request_object_signing_alg_values_supported',
    'baseName': 'request_object_signing_alg_values_supported',
    'type': 'Array<SigningAlgorithm>',
    'format': ''
  },
  {
    'name': 'request_parameter_supported',
    'baseName': 'request_parameter_supported',
    'type': 'boolean',
    'format': ''
  },
  {
    'name': 'response_modes_supported',
    'baseName': 'response_modes_supported',
    'type': 'Array<ResponseMode>',
    'format': ''
  },
  {
    'name': 'response_types_supported',
    'baseName': 'response_types_supported',
    'type': 'Array<ResponseTypesSupported>',
    'format': ''
  },
  {
    'name': 'revocation_endpoint',
    'baseName': 'revocation_endpoint',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'revocation_endpoint_auth_methods_supported',
    'baseName': 'revocation_endpoint_auth_methods_supported',
    'type': 'Array<EndpointAuthMethod>',
    'format': ''
  },
  {
    'name': 'scopes_supported',
    'baseName': 'scopes_supported',
    'type': 'Array<string>',
    'format': ''
  },
  {
    'name': 'subject_types_supported',
    'baseName': 'subject_types_supported',
    'type': 'Array<SubjectType>',
    'format': ''
  },
  {
    'name': 'token_endpoint',
    'baseName': 'token_endpoint',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'token_endpoint_auth_methods_supported',
    'baseName': 'token_endpoint_auth_methods_supported',
    'type': 'Array<EndpointAuthMethod>',
    'format': ''
  }
];
