/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


'use strict';
/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 4.0.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, '__esModule', { value: true });
exports.LogEvent = void 0;
class LogEvent {
  constructor() {
  }
  static getAttributeTypeMap() {
    return LogEvent.attributeTypeMap;
  }
}
exports.LogEvent = LogEvent;
LogEvent.discriminator = undefined;
LogEvent.attributeTypeMap = [
  {
    'name': 'actor',
    'baseName': 'actor',
    'type': 'LogActor',
    'format': ''
  },
  {
    'name': 'authenticationContext',
    'baseName': 'authenticationContext',
    'type': 'LogAuthenticationContext',
    'format': ''
  },
  {
    'name': 'client',
    'baseName': 'client',
    'type': 'LogClient',
    'format': ''
  },
  {
    'name': 'debugContext',
    'baseName': 'debugContext',
    'type': 'LogDebugContext',
    'format': ''
  },
  {
    'name': 'displayMessage',
    'baseName': 'displayMessage',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'eventType',
    'baseName': 'eventType',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'legacyEventType',
    'baseName': 'legacyEventType',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'outcome',
    'baseName': 'outcome',
    'type': 'LogOutcome',
    'format': ''
  },
  {
    'name': 'published',
    'baseName': 'published',
    'type': 'Date',
    'format': 'date-time'
  },
  {
    'name': 'request',
    'baseName': 'request',
    'type': 'LogRequest',
    'format': ''
  },
  {
    'name': 'securityContext',
    'baseName': 'securityContext',
    'type': 'LogSecurityContext',
    'format': ''
  },
  {
    'name': 'severity',
    'baseName': 'severity',
    'type': 'LogSeverity',
    'format': ''
  },
  {
    'name': 'target',
    'baseName': 'target',
    'type': 'Array<LogTarget>',
    'format': ''
  },
  {
    'name': 'transaction',
    'baseName': 'transaction',
    'type': 'LogTransaction',
    'format': ''
  },
  {
    'name': 'uuid',
    'baseName': 'uuid',
    'type': 'string',
    'format': ''
  },
  {
    'name': 'version',
    'baseName': 'version',
    'type': 'string',
    'format': ''
  }
];
