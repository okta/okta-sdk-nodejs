/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 4.0.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AcsEndpoint } from './../models/AcsEndpoint';
import { SamlAttributeStatement } from './../models/SamlAttributeStatement';
import { SignOnInlineHook } from './../models/SignOnInlineHook';
import { SingleLogout } from './../models/SingleLogout';
import { SpCertificate } from './../models/SpCertificate';
export declare class SamlApplicationSettingsSignOn {
  'acsEndpoints'?: Array<AcsEndpoint>;
  'allowMultipleAcsEndpoints'?: boolean;
  'assertionSigned'?: boolean;
  'attributeStatements'?: Array<SamlAttributeStatement>;
  'audience'?: string;
  'audienceOverride'?: string;
  'authnContextClassRef'?: string;
  'defaultRelayState'?: string;
  'destination'?: string;
  'destinationOverride'?: string;
  'digestAlgorithm'?: string;
  'honorForceAuthn'?: boolean;
  'idpIssuer'?: string;
  'inlineHooks'?: Array<SignOnInlineHook>;
  'recipient'?: string;
  'recipientOverride'?: string;
  'requestCompressed'?: boolean;
  'responseSigned'?: boolean;
  'signatureAlgorithm'?: string;
  'slo'?: SingleLogout;
  'spCertificate'?: SpCertificate;
  'spIssuer'?: string;
  'ssoAcsUrl'?: string;
  'ssoAcsUrlOverride'?: string;
  'subjectNameIdFormat'?: string;
  'subjectNameIdTemplate'?: string;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
