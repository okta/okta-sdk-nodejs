/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Actions } from './../models/Actions';
import { Conditions } from './../models/Conditions';
import { LifecycleStatus } from './../models/LifecycleStatus';
import { LinksSelf } from './../models/LinksSelf';
export declare class RealmAssignment {
  'actions'?: Actions;
  'conditions'?: Conditions;
  /**
    * Timestamp when the realm assignment was created
    */
  'created'?: Date;
  /**
    * Array of allowed domains. No user in this realm can be created or updated unless they have a username and email from one of these domains.  The following characters aren\'t allowed in the domain name: `!$%^&()=*+,:;<>\'[]|/?\\`
    */
  'domains'?: Array<string>;
  /**
    * Unique ID of the realm assignment
    */
  'id'?: string;
  /**
    * Indicates the default realm. Existing users will start out in the default realm and can be moved individually to other realms.
    */
  'isDefault'?: boolean;
  /**
    * Timestamp of when the realm assignment was updated
    */
  'lastUpdated'?: Date;
  /**
    * Name of the realm
    */
  'name'?: string;
  /**
    * The priority of the realm assignment. The lower the number, the higher the priority. This helps resolve conflicts between realm assignments.  > **Note:** When you create realm assignments in bulk, realm assignment priorities must be unique.
    */
  'priority'?: number;
  'status'?: LifecycleStatus;
  '_links'?: LinksSelf;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
