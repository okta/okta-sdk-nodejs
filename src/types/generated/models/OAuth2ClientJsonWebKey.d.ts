/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OAuthClientSecretLinks } from './../models/OAuthClientSecretLinks';
export declare class OAuth2ClientJsonWebKey {
  /**
    * Algorithm used in the key
    */
  'alg'?: string;
  /**
    * Timestamp when the OAuth Client 2.0 JSON Web Key was created
    */
  'created'?: string;
  /**
    * RSA key value (exponent) for key binding
    */
  'e'?: string;
  /**
    * The unique ID of the OAuth Client JSON Web Key
    */
  'id'?: string;
  /**
    * Unique identifier of the JSON Web Key in the OAUth 2.0 Client\'s JWKS
    */
  'kid'?: string | null;
  /**
    * Cryptographic algorithm family for the certificate\'s key pair
    */
  'kty'?: string;
  /**
    * Timestamp when the OAuth Client 2.0 JSON Web Key was updated
    */
  'lastUpdated'?: string;
  /**
    * RSA key value (modulus) for key binding
    */
  'n'?: string;
  /**
    * Status of the OAuth 2.0 Client JSON Web Key
    */
  'status'?: OAuth2ClientJsonWebKeyStatusEnum;
  /**
    * Acceptable use of the JSON Web Key
    */
  'use'?: string;
  '_links'?: OAuthClientSecretLinks;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
export declare type OAuth2ClientJsonWebKeyStatusEnum = 'ACTIVE' | 'INACTIVE';
