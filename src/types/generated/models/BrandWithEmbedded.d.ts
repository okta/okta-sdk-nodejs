/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DefaultApp } from './../models/DefaultApp';
import { LinksSelf } from './../models/LinksSelf';
export declare class BrandWithEmbedded {
  '_embedded'?: any;
  '_links'?: LinksSelf & any;
  /**
    * Consent for updating the custom privacy URL. Not required when resetting the URL.
    */
  'agreeToCustomPrivacyPolicy'?: boolean;
  /**
    * Custom privacy policy URL
    */
  'customPrivacyPolicyUrl'?: string;
  'defaultApp'?: DefaultApp;
  /**
    * The ID of the email domain
    */
  'emailDomainId'?: string;
  /**
    * The Brand ID
    */
  'id'?: string;
  /**
    * If `true`, the Brand is used for the Okta subdomain
    */
  'isDefault'?: boolean;
  /**
    * The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)
    */
  'locale'?: string;
  /**
    * The name of the Brand
    */
  'name'?: string;
  /**
    * Removes \"Powered by Okta\" from the sign-in page in redirect authentication deployments, and \"Â© [current year] Okta, Inc.\" from the Okta End-User Dashboard
    */
  'removePoweredByOkta'?: boolean;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
