/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LifecycleStatus } from './../models/LifecycleStatus';
import { LinksSelf } from './../models/LinksSelf';
import { OAuth2ClaimConditions } from './../models/OAuth2ClaimConditions';
import { OAuth2ClaimGroupFilterType } from './../models/OAuth2ClaimGroupFilterType';
import { OAuth2ClaimType } from './../models/OAuth2ClaimType';
import { OAuth2ClaimValueType } from './../models/OAuth2ClaimValueType';
export declare class OAuth2Claim {
  /**
    * Specifies whether to include Claims in the token. The value is always `TRUE` for access token Claims. If the value is set to `FALSE` for an ID token claim, the Claim isn\'t included in the ID token when the token is requested with the access token or with the `authorization_code`. The client instead uses the access token to get Claims from the `/userinfo` endpoint.
    */
  'alwaysIncludeInToken'?: boolean;
  'claimType'?: OAuth2ClaimType;
  'conditions'?: OAuth2ClaimConditions;
  'group_filter_type'?: OAuth2ClaimGroupFilterType;
  /**
    * ID of the Claim
    */
  'id'?: string;
  /**
    * Name of the Claim
    */
  'name'?: string;
  'status'?: LifecycleStatus;
  /**
    * When `true`, indicates that Okta created the Claim
    */
  'system'?: boolean;
  /**
    * Specifies the value of the Claim. This value must be a string literal if `valueType` is `GROUPS`, and the string literal is matched with the selected `group_filter_type`. The value must be an Okta EL expression if `valueType` is `EXPRESSION`.
    */
  'value'?: string;
  'valueType'?: OAuth2ClaimValueType;
  '_links'?: LinksSelf;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
