/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 4.0.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ApplicationAccessibility } from './../models/ApplicationAccessibility';
import { ApplicationLicensing } from './../models/ApplicationLicensing';
import { ApplicationLifecycleStatus } from './../models/ApplicationLifecycleStatus';
import { ApplicationLinks } from './../models/ApplicationLinks';
import { ApplicationSignOnMode } from './../models/ApplicationSignOnMode';
import { ApplicationVisibility } from './../models/ApplicationVisibility';
export declare class Application {
  'accessibility'?: ApplicationAccessibility;
  'created'?: Date;
  'features'?: Array<string>;
  'id'?: string;
  'label'?: string;
  'lastUpdated'?: Date;
  'licensing'?: ApplicationLicensing;
  'profile'?: {
        [key: string]: any;
    };
  'signOnMode'?: ApplicationSignOnMode;
  'status'?: ApplicationLifecycleStatus;
  'visibility'?: ApplicationVisibility;
  '_embedded'?: {
        [key: string]: any;
    };
  '_links'?: ApplicationLinks;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
