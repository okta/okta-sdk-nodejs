/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { UserSchemaAttribute } from './../models/UserSchemaAttribute';
export declare class UserSchemaBaseProperties {
  /**
    * City or locality component of the user\'s address (`locality`)
    */
  'city'?: UserSchemaAttribute;
  /**
    * Name of a cost center assigned to the user
    */
  'costCenter'?: UserSchemaAttribute;
  /**
    * Country name component of the user\'s address (`country`.) This property uses [ISO 3166-1 alpha 2 \"short\" code format](https://tools.ietf.org/html/draft-ietf-scim-core-schema-22#ref-ISO3166).
    */
  'countryCode'?: UserSchemaAttribute;
  /**
    * Name of the user\'s department
    */
  'department'?: UserSchemaAttribute;
  /**
    * Name of the user, suitable for display to end users
    */
  'displayName'?: UserSchemaAttribute;
  /**
    * Name of the user\'s division
    */
  'division'?: UserSchemaAttribute;
  /**
    * Primary email address of the user. This property is formatted according to [RFC 5322 Section 3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3).
    */
  'email'?: UserSchemaAttribute;
  /**
    * Organization or company assigned unique identifier for the user
    */
  'employeeNumber'?: UserSchemaAttribute;
  /**
    * Given name of the user (`givenName`)
    */
  'firstName'?: UserSchemaAttribute;
  /**
    * Honorific prefix(es) of the user or title in most Western languages
    */
  'honorificPrefix'?: UserSchemaAttribute;
  /**
    * Honorific suffix(es) of the user
    */
  'honorificSuffix'?: UserSchemaAttribute;
  /**
    * Family name of the user (`familyName`)
    */
  'lastName'?: UserSchemaAttribute;
  /**
    * User\'s default location for purposes of localizing items such as currency, date time format, numerical representations, and so on.  A locale value is a concatenation of the ISO 639-1 two-letter language code, an underscore, and the ISO 3166-1 two-letter country code. For example: `en_US` specifies the language English and country US. This value is `en_US` by default.
    */
  'locale'?: UserSchemaAttribute;
  /**
    * Unique identifier for the user (`userName`)  The login property is validated according to its pattern attribute, which is a string. By default, the attribute is null. When the attribute is null, the username is required to be formatted as an email address as defined by [RFC 6531 Section 3.3](http://tools.ietf.org/html/rfc6531#section-3.3). The pattern can be set through the API to one of the following forms. (The Admin Console provides access to the same forms.)   * A login pattern of `\".+\"` indicates that there is no restriction on usernames. Any non-empty, unique value is permitted, and the minimum length of five isn\'t enforced. In this case, usernames don\'t need to include the `@` character. If a name does include `@`, the portion ahead of the `@` can be used for logging in, provided it identifies a unique user within the org.   * A login pattern of the form `\"[...]+\"` indicates that usernames must only contain characters from the set given between the brackets. The enclosing brackets and final `+` are required for this form. Character ranges can be indicated using hyphens. To include the hyphen itself in the allowed set, the hyphen must appear first. Any characters in the set except the hyphen, a-z, A-Z, and 0-9 must be preceded by a backslash (`\\`). For example, `\"[a-z13579\\.]+\"` would restrict usernames to lowercase letters, odd digits, and periods, while `\"[-a-zA-Z0-9]+\"` would allow basic alphanumeric characters and hyphens.
    */
  'login'?: UserSchemaAttribute;
  /**
    * The `displayName` of the user\'s manager
    */
  'manager'?: UserSchemaAttribute;
  /**
    * The `id` of the user\'s manager
    */
  'managerId'?: UserSchemaAttribute;
  /**
    * Middle name(s) of the user
    */
  'middleName'?: UserSchemaAttribute;
  /**
    * Mobile phone number of the user
    */
  'mobilePhone'?: UserSchemaAttribute;
  /**
    * Casual way to address the user in real life
    */
  'nickName'?: UserSchemaAttribute;
  /**
    * Name of the user\'s organization
    */
  'organization'?: UserSchemaAttribute;
  /**
    * Mailing address component of the user\'s address
    */
  'postalAddress'?: UserSchemaAttribute;
  /**
    * User\'s preferred written or spoken languages. This property is formatted according to [RFC 7231 Section 5.3.5](https://tools.ietf.org/html/rfc7231#section-5.3.5).
    */
  'preferredLanguage'?: UserSchemaAttribute;
  /**
    * Primary phone number of the user, such as home number
    */
  'primaryPhone'?: UserSchemaAttribute;
  /**
    * URL of the user\'s online profile (for example, a web page.) This property is formatted according to the [Relative Uniform Resource Locators specification](https://tools.ietf.org/html/draft-ietf-scim-core-schema-22#ref-ISO3166).
    */
  'profileUrl'?: UserSchemaAttribute;
  /**
    * Secondary email address of the user typically used for account recovery. This property is formatted according to [RFC 5322 Section 3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3).
    */
  'secondEmail'?: UserSchemaAttribute;
  /**
    * State or region component of the user\'s address (`region`)
    */
  'state'?: UserSchemaAttribute;
  /**
    * Full street address component of the user\'s address
    */
  'streetAddress'?: UserSchemaAttribute;
  /**
    * User\'s time zone. This property is formatted according to the [IANA Time Zone database format](https://tools.ietf.org/html/rfc6557).
    */
  'timezone'?: UserSchemaAttribute;
  /**
    * User\'s title, such as \"Vice President\"
    */
  'title'?: UserSchemaAttribute;
  /**
    * Used to describe the organization to the user relationship such as \"Employee\" or \"Contractor\".  **Note:** The `userType` field is an arbitrary string value and isn\'t related to the newer [User Types](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/) feature.
    */
  'userType'?: UserSchemaAttribute;
  /**
    * ZIP code or postal code component of the user\'s address (`postalCode`)
    */
  'zipCode'?: UserSchemaAttribute;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
