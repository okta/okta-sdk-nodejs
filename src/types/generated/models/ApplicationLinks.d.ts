/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AccessPolicyLink } from './../models/AccessPolicyLink';
import { GroupsLink } from './../models/GroupsLink';
import { HelpLink } from './../models/HelpLink';
import { HrefObject } from './../models/HrefObject';
import { HrefObjectActivateLink } from './../models/HrefObjectActivateLink';
import { HrefObjectDeactivateLink } from './../models/HrefObjectDeactivateLink';
import { HrefObjectSelfLink } from './../models/HrefObjectSelfLink';
import { MetadataLink } from './../models/MetadataLink';
import { UsersLink } from './../models/UsersLink';
/**
* Discoverable resources related to the app
*/
export declare class ApplicationLinks {
  'accessPolicy'?: AccessPolicyLink;
  'activate'?: HrefObjectActivateLink;
  /**
    * List of app link resources
    */
  'appLinks'?: Array<HrefObject>;
  'deactivate'?: HrefObjectDeactivateLink;
  'groups'?: GroupsLink;
  'help'?: HelpLink;
  /**
    * List of app logo resources
    */
  'logo'?: Array<HrefObject>;
  'metadata'?: MetadataLink;
  'self'?: HrefObjectSelfLink;
  'users'?: UsersLink;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
