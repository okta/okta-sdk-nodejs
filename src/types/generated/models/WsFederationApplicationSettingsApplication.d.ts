/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
export declare class WsFederationApplicationSettingsApplication {
  /**
    * You can federate user attributes such as Okta profile fields, LDAP, Active Directory, and Workday values. The SP uses the federated WS-Fed attribute values accordingly.
    */
  'attributeStatements'?: string;
  /**
    * The entity ID of the SP. Use the entity ID value exactly as provided by the SP.
    */
  'audienceRestriction': string;
  /**
    * Identifies the SAML authentication context class for the assertion\'s authentication statement
    */
  'authnContextClassRef': string;
  /**
    * A regular expression that filters for the User Groups you want included with the `groupName` attribute. If the matching User Group has a corresponding AD group, then the attribute statement includes the value of the attribute specified by `groupValueFormat`. If the matching User Group doesn\'t contain a corresponding AD group, then the `groupName` is used in the attribute statement.
    */
  'groupFilter'?: string;
  /**
    * The group name to include in the WS-Fed response attribute statement. This property is used in conjunction with the `groupFilter` property.  Groups that are filtered through the `groupFilter` expression are included with the `groupName` in the attribute statement. Any users that belong to the group you\'ve filtered are included in the WS-Fed response attribute statement.
    */
  'groupName'?: string;
  /**
    * Specifies the WS-Fed assertion attribute value for filtered groups. This attribute is only applied to Active Directory groups.
    */
  'groupValueFormat': WsFederationApplicationSettingsApplicationGroupValueFormatEnum;
  /**
    * The username format that you send in the WS-Fed response
    */
  'nameIDFormat': string;
  /**
    * The uniform resource identifier (URI) of the WS-Fed app that\'s used to share resources securely within a domain. It\'s the identity that\'s sent to the Okta IdP when signing in. See [Realm name](https://help.okta.com/okta_help.htm?type=oie&id=ext_Apps_Configure_Okta_Template_WS_Federation#Realm).
    */
  'realm'?: string;
  /**
    * Launch URL for the web app
    */
  'siteURL': string;
  /**
    * Specifies additional username attribute statements to include in the WS-Fed assertion
    */
  'usernameAttribute': WsFederationApplicationSettingsApplicationUsernameAttributeEnum;
  /**
    * Enables a web app to override the `wReplyURL` URL with a reply parameter.
    */
  'wReplyOverride'?: boolean;
  /**
    * The WS-Fed SP endpoint where your users sign in
    */
  'wReplyURL': string;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
export declare type WsFederationApplicationSettingsApplicationGroupValueFormatEnum = 'windowsDomainQualifiedName' | 'samAccountName' | 'dn';
export declare type WsFederationApplicationSettingsApplicationUsernameAttributeEnum = 'username' | 'upn' | 'upnAndUsername' | 'none';
