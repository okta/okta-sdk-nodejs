/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DeviceIntegrationsMetadataOneOf } from './../models/DeviceIntegrationsMetadataOneOf';
import { DeviceIntegrationsMetadataOneOf1 } from './../models/DeviceIntegrationsMetadataOneOf1';
import { DeviceIntegrationsMetadataOneOf2 } from './../models/DeviceIntegrationsMetadataOneOf2';
/**
* The metadata of the device integration
*/
/**
 * @type DeviceIntegrationsMetadata
 * Type
 * @export
 */
export declare type DeviceIntegrationsMetadata = DeviceIntegrationsMetadataOneOf | DeviceIntegrationsMetadataOneOf1 | DeviceIntegrationsMetadataOneOf2;
/**
* @type DeviceIntegrationsMetadataClass
    * The metadata of the device integration
* @export
*/
export declare class DeviceIntegrationsMetadataClass {
  static readonly discriminator: string | undefined;
  static readonly mapping: {
        [index: string]: string;
    } | undefined;
}
