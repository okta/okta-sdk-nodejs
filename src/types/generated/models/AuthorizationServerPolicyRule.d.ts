/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AuthorizationServerPolicyRuleActions } from './../models/AuthorizationServerPolicyRuleActions';
import { AuthorizationServerPolicyRuleConditions } from './../models/AuthorizationServerPolicyRuleConditions';
import { LinksSelfAndLifecycle } from './../models/LinksSelfAndLifecycle';
export declare class AuthorizationServerPolicyRule {
  'actions'?: AuthorizationServerPolicyRuleActions;
  'conditions'?: AuthorizationServerPolicyRuleConditions;
  /**
    * Timestamp when the rule was created
    */
  'created'?: Date;
  /**
    * Identifier of the rule
    */
  'id'?: string;
  /**
    * Timestamp when the rule was last modified
    */
  'lastUpdated'?: Date;
  /**
    * Name of the rule
    */
  'name'?: string;
  /**
    * Priority of the rule
    */
  'priority'?: number;
  /**
    * Status of the rule
    */
  'status'?: AuthorizationServerPolicyRuleStatusEnum;
  /**
    * Set to `true` for system rules. You can\'t delete system rules.
    */
  'system'?: boolean;
  /**
    * Rule type
    */
  'type'?: AuthorizationServerPolicyRuleTypeEnum;
  '_links'?: LinksSelfAndLifecycle;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
export declare type AuthorizationServerPolicyRuleStatusEnum = 'ACTIVE' | 'INACTIVE';
export declare type AuthorizationServerPolicyRuleTypeEnum = 'RESOURCE_ACCESS';
