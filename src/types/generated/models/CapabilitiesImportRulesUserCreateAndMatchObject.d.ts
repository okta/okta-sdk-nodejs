/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* Rules for matching and creating users
*/
export declare class CapabilitiesImportRulesUserCreateAndMatchObject {
  /**
    * Allows user import upon partial matching. Partial matching occurs when the first and last names of an imported user match those of an existing Okta user, even if the username or email attributes don\'t match.
    */
  'allowPartialMatch'?: boolean;
  /**
    * If set to `true`, imported new users are automatically activated.
    */
  'autoActivateNewUsers'?: boolean;
  /**
    * If set to `true`, exact-matched users are automatically confirmed on activation. If set to `false`, exact-matched users need to be confirmed manually.
    */
  'autoConfirmExactMatch'?: boolean;
  /**
    * If set to `true`, imported new users are automatically confirmed on activation. This doesn\'t apply to imported users that already exist in Okta.
    */
  'autoConfirmNewUsers'?: boolean;
  /**
    * If set to `true`, partially matched users are automatically confirmed on activation. If set to `false`, partially matched users need to be confirmed manually.
    */
  'autoConfirmPartialMatch'?: boolean;
  /**
    * Determines the attribute to match users
    */
  'exactMatchCriteria'?: CapabilitiesImportRulesUserCreateAndMatchObjectExactMatchCriteriaEnum;
  static readonly discriminator: string | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
export declare type CapabilitiesImportRulesUserCreateAndMatchObjectExactMatchCriteriaEnum = 'EMAIL' | 'USERNAME';
