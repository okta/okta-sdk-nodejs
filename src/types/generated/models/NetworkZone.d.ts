/*!
 * Copyright (c) 2017-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */


/**
 * Okta Admin Management
 * Allows customers to easily access the Okta Management APIs
 *
 * OpenAPI spec version: 5.1.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LinksSelfAndLifecycle } from './../models/LinksSelfAndLifecycle';
import { NetworkZoneStatus } from './../models/NetworkZoneStatus';
import { NetworkZoneType } from './../models/NetworkZoneType';
import { NetworkZoneUsage } from './../models/NetworkZoneUsage';
export declare class NetworkZone {
  /**
    * Timestamp when the object was created
    */
  'created'?: Date;
  /**
    * Unique identifier for the Network Zone
    */
  'id'?: string;
  /**
    * Timestamp when the object was last modified
    */
  'lastUpdated'?: Date;
  /**
    * Unique name for this Network Zone
    */
  'name': string;
  'status'?: NetworkZoneStatus;
  /**
    * Indicates a system Network Zone: * `true` for system Network Zones * `false` for custom Network Zones  The Okta org provides the following default system Network Zones: * `LegacyIpZone` * `BlockedIpZone` * `DefaultEnhancedDynamicZone` * `DefaultExemptIpZone`  Admins can modify the name of the default system Network Zone and add up to 5000 gateway or proxy IP entries.
    */
  'system'?: boolean;
  'type': NetworkZoneType;
  'usage'?: NetworkZoneUsage;
  '_links'?: LinksSelfAndLifecycle;
  static readonly discriminator: string | undefined;
  static readonly mapping: {
        [index: string]: string;
    } | undefined;
  static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
  static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
  constructor();
}
