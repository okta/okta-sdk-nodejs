/* THIS FILE IS AUTO-GENERATED - SEE CONTRIBUTOR DOCUMENTATION */

const qs = require('querystring');

const Collection = require('./collection');
const models = require('./models');
const factories = require('./factories');
const ModelFactory = require('./model-factory');

/**
 * Auto-Generated API client, implements the operations as defined in the OpenaAPI JSON spec
 *
 * @class GeneratedApiClient
 */
class GeneratedApiClient {

{{#each operations}}
  /**
   {{{jsdocBuilder this}}}
   */
  {{operationId}}({{operationArgumentBuilder this}}) {
    let url = `${this.baseUrl}{{replacePathParams path}}`;
    {{#if queryParams.length}}
    const queryString = qs.stringify(queryParameters || {});

    url += queryString ? ('?' + queryString) : '';
    {{/if}}

    {{#if isArray}}
    {{#if responseModelRequiresResolution}}
    return new Collection(this, url, new factories.{{responseModel}}());
    {{else}}
    return new Collection(this, url, new ModelFactory(models.{{responseModel}}));
    {{/if}}
    {{else}}
    const resources = {{{getAffectedResources path}}};

    {{#if (eq method 'delete')}}
    const request = this.http.delete(url, null, {resources});
    {{/if}}
    {{#if (eq method 'get')}}
    const request = this.http.getJson(url, null, {resources});
    {{/if}}
    {{#if (eq method 'post')}}
    {{#if bodyModel}}
    {{#if responseModel}}
    const request = this.http.postJson(url, {
      body: {{camelCase bodyModel}}
    }, {resources});
    {{else}}
    const request = this.http.post(url, {
      body: {{camelCase bodyModel}}
    }, {resources});
    {{/if}}
    {{else}}
    {{#if responseModel}}
    const request = this.http.postJson(url, null, {resources});
    {{else}}
    const request = this.http.post(url, null, {resources});
    {{/if}}
    {{/if}}
    {{/if}}
    {{#if (eq method 'put')}}
    {{#if bodyModel}}
    {{#if responseModel}}
    const request = this.http.putJson(url, {
      body: {{camelCase bodyModel}}
    }, {resources});
    {{else}}
    const request = this.http.put(url, {
      body: {{camelCase bodyModel}}
    }, {resources});
    {{/if}}
    {{else}}
    {{#if responseModel}}
    const request = this.http.putJson(url, null, {resources});
    {{else}}
    const request = this.http.put(url, null, {resources});
    {{/if}}
    {{/if}}
    {{/if}}
    {{#if responseModel}}
    {{#if responseModelRequiresResolution}}
    return request.then(jsonRes => new factories.{{responseModel}}().createInstance(jsonRes, this));
    {{else}}
    return request.then(jsonRes => new models.{{responseModel}}(jsonRes, this));
    {{/if}}
    {{else}}
    return request;
    {{/if}}
    {{/if}}
  }

{{/each}}
}

module.exports = GeneratedApiClient;
