{
  "name": "@okta/okta-sdk-nodejs",
  "version": "4.2.0",
  "description": "Okta API wrapper for Node.js",
  "engines": {
    "node": ">=10.0"
  },
  "files": [
    "src/",
    "README.md"
  ],
  "main": "src/index.js",
  "scripts": {
    "banners": "./utils/maintain-banners.js",
    "prebuild": "rimraf ./src/models ./src/factories ./src/generated-client.js",
    "build": "okta-sdk-generator -t templates/ -o .",
    "eslint": "eslint -c src/.eslintrc src/ && eslint -c test/.eslintrc test/it test/unit && eslint -c test/jest/.eslintrc test/jest/ && eslint -c src/.eslintrc utils/",
    "jest": "jest --coverage test/jest/*.js",
    "predocs": "rimraf ./jsdocs && mkdir jsdocs/ && ./utils/make-jsdoc-readme.js > ./jsdocs/jsdoc-temp.md",
    "docs": "./node_modules/.bin/jsdoc src/ -c ./docs/config.json -d ./jsdocs/ -P ./package.json -R ./jsdocs/jsdoc-temp.md -r",
    "test:integration": "nyc --reporter=text --reporter=html mocha test/it/*.js --no-timeouts",
    "test:unit": "nyc --reporter=text --reporter=html mocha test/unit/*.js --no-timeouts",
    "test": "npm run eslint && npm run test:unit && npm run test:integration && npm run jest"
  },
  "keywords": [],
  "license": "Apache-2.0",
  "repository": "https://github.com/okta/okta-sdk-nodejs",
  "dependencies": {
    "deep-copy": "^1.4.2",
    "flat": "^5.0.2",
    "isomorphic-fetch": "2.2.1",
    "js-yaml": "^3.13.0",
    "lodash": "^4.17.14",
    "njwt": "^1.0.0",
    "parse-link-header": "1.0.0",
    "rasha": "^1.2.5"
  },
  "devDependencies": {
    "@okta/openapi": "^2.0.0",
    "chai": "^3.5.0",
    "eslint": "^3.19.0",
    "eslint-plugin-jest": "^21.17.0",
    "fake-fs": "^0.5.0",
    "faker": "^4.1.0",
    "globby": "^6.1.0",
    "ink-docstrap": "^1.3.0",
    "jest": "^23.1.0",
    "jest-date-mock": "^1.0.8",
    "jsdoc": "^3.4.0",
    "mocha": "^3.4.1",
    "nyc": "^10.3.2",
    "rimraf": "^3.0.2",
    "sinon": "^7.3.1",
    "speakeasy": "^2.0.0"
  },
  "jest": {
    "restoreMocks": true,
    "rootDir": "./test/jest",
    "setupFiles": [
      "jest-date-mock"
    ]
  }
}
